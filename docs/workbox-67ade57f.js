define("./workbox-67ade57f.js",["exports"],(function(e){"use strict";try{self["workbox:core:5.0.0-rc.1"]&&_()}catch(e){}const t=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class s extends Error{constructor(e,s){super(t(e,s)),this.name=e,this.details=s}}try{self["workbox:routing:5.0.0-rc.1"]&&_()}catch(e){}const n="GET",r=e=>e&&"object"==typeof e?e:{handle:e};class i{constructor(e,t,s=n){this.handler=r(t),this.match=e,this.method=s}}class o extends i{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const c=e=>{const t=new URL(String(e),location.href);return t.origin===location.origin?t.pathname:t.href};class a{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;let n,{params:r,route:i}=this.findMatchingRoute({url:s,request:e,event:t}),o=i&&i.handler;if(!o&&this.s&&(o=this.s),o){try{n=o.handle({url:s,request:e,event:t,params:r})}catch(e){n=Promise.reject(e)}return n instanceof Promise&&this.i&&(n=n.catch(n=>this.i.handle({url:s,request:e,event:t}))),n}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const r of n){let n,i=r.match({url:e,request:t,event:s});if(i)return n=i,Array.isArray(i)&&0===i.length?n=void 0:i.constructor===Object&&0===Object.keys(i).length?n=void 0:"boolean"==typeof i&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e){this.s=r(e)}setCatchHandler(e){this.i=r(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new s("unregister-route-but-not-found-with-method",{method:e.method});const t=this.t.get(e.method).indexOf(e);if(!(t>-1))throw new s("unregister-route-route-not-registered");this.t.get(e.method).splice(t,1)}}let u;const h=()=>(u||((u=new a).addFetchListener(),u.addCacheListener()),u),l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[l.prefix,e,l.suffix].filter(e=>e&&e.length>0).join("-"),w={updateDetails:e=>{(e=>{for(const t of Object.keys(l))e(t)})(t=>{"string"==typeof e[t]&&(l[t]=e[t])})},getGoogleAnalyticsName:e=>e||f(l.googleAnalytics),getPrecacheName:e=>e||f(l.precache),getPrefix:()=>l.prefix,getRuntimeName:e=>e||f(l.runtime),getSuffix:()=>l.suffix},p=new Set;const d=(e,t)=>e.filter(e=>t in e),y=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:r=[]})=>{const i=await self.caches.open(e),o=await m({plugins:r,request:t,mode:"read"});let c=await i.match(o,n);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;c=await r.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:c,request:o})}return c},g=async({request:e,response:t,event:s,plugins:n=[]})=>{let r=t,i=!1;for(let t of n)if("cacheWillUpdate"in t){i=!0;const n=t.cacheWillUpdate;if(!(r=await n.call(t,{request:e,response:r,event:s})))break}return i||(r=r&&200===r.status?r:void 0),r||null},m=async({request:e,mode:t,plugins:s=[]})=>{const n=d(s,"cacheKeyWillBeUsed");let r=e;for(const e of n)"string"==typeof(r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}))&&(r=new Request(r));return r},R={put:async({cacheName:e,request:t,response:n,event:r,plugins:i=[],matchOptions:o})=>{const a=await m({plugins:i,request:t,mode:"write"});if(!n)throw new s("cache-put-with-no-response",{url:c(a.url)});let u=await g({event:r,plugins:i,response:n,request:a});if(!u)return;const h=await self.caches.open(e),l=d(i,"cacheDidUpdate");let f=l.length>0?await y({cacheName:e,matchOptions:o,request:a}):null;try{await h.put(a,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of p)await e()}(),e}for(let t of l)await t.cacheDidUpdate.call(t,{cacheName:e,event:r,oldResponse:f,newResponse:u,request:a})},match:y},q={fetch:async({request:e,fetchOptions:t,event:n,plugins:r=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const i=d(r,"fetchDidFail"),o=i.length>0?e.clone():null;try{for(let t of r)if("requestWillFetch"in t){const s=t.requestWillFetch,r=e.clone();e=await s.call(t,{request:r,event:n})}}catch(e){throw new s("plugin-error-request-will-fetch",{thrownError:e})}let c=e.clone();try{let s;s="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of r)"fetchDidSucceed"in e&&(s=await e.fetchDidSucceed.call(e,{event:n,request:c,response:s}));return s}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:o.clone(),request:c.clone()});throw e}}};try{self["workbox:strategies:5.0.0-rc.1"]&&_()}catch(e){}let v;async function U(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},r=t?t(n):n,i=function(){if(void 0===v){const e=new Response("");if("body"in e)try{new Response(e.body),v=!0}catch(e){v=!1}v=!1}return v}()?s.body:await s.blob();return new Response(i,r)}try{self["workbox:precaching:5.0.0-rc.1"]&&_()}catch(e){}const L="__WB_REVISION__";function x(e){if(!e)throw new s("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new s("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const r=new URL(n,location.href),i=new URL(n,location.href);return r.searchParams.set(L,t),{cacheKey:r.href,url:i.href}}class N{constructor(e){this.o=w.getPrecacheName(e),this.u=new Map,this.h=new Map,this.l=new Map}addToCacheList(e){const t=[];for(const n of e){"string"==typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:r}=x(n),i="string"!=typeof n&&n.revision?"reload":"default";if(this.u.has(r)&&this.u.get(r)!==e)throw new s("add-to-cache-list-conflicting-entries",{firstEntry:this.u.get(r),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.l.has(e)&&this.l.get(e)!==n.integrity)throw new s("add-to-cache-list-conflicting-integrities",{url:r});this.l.set(e,n.integrity)}if(this.u.set(r,e),this.h.set(r,i),t.length>0){const e="Workbox is precaching URLs without revision "+`info: ${t.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],r=await self.caches.open(this.o),i=await r.keys(),o=new Set(i.map(e=>e.url));for(const[e,t]of this.u)o.has(t)?n.push(e):s.push({cacheKey:t,url:e});const c=s.map(({cacheKey:s,url:n})=>{const r=this.l.get(s),i=this.h.get(n);return this.p({cacheKey:s,cacheMode:i,event:e,integrity:r,plugins:t,url:n})});return await Promise.all(c),{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.o),t=await e.keys(),s=new Set(this.u.values()),n=[];for(const r of t)s.has(r.url)||(await e.delete(r),n.push(r.url));return{deletedURLs:n}}async p({cacheKey:e,url:t,cacheMode:n,event:r,plugins:i,integrity:o}){const c=new Request(t,{integrity:o,cache:n,credentials:"same-origin"});let a,u=await q.fetch({event:r,plugins:i,request:c});for(const e of i||[])"cacheWillUpdate"in e&&(a=e);if(!(a?await a.cacheWillUpdate({event:r,request:c,response:u}):u.status<400))throw new s("bad-precaching-response",{url:t,status:u.status});u.redirected&&(u=await U(u)),await R.put({event:r,plugins:i,response:u,request:e===t?c:new Request(e),cacheName:this.o,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.u}getCachedURLs(){return[...this.u.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.u.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.o)).match(s)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new s("missing-precache-entry",{cacheName:this.o,url:t.url})}catch(s){if(e)return fetch(t);throw s}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new s("non-precached-url",{url:e});const n=this.createHandler(t),r=new Request(e);return()=>n({request:r})}}let b;const O=()=>(b||(b=new N),b);const M=(e,t)=>{const s=O().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:r}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const o=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(i,t);if(yield o.href,s&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=s,yield e.href}if(n){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:i});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let E=!1;const K=e=>{E||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const r=w.getPrecacheName();self.addEventListener("fetch",i=>{const o=M(i.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!o)return;let c=self.caches.open(r).then(e=>e.match(o)).then(e=>e||fetch(o));i.respondWith(c)})})(e),E=!0)},P=[],S={get:()=>P,add(e){P.push(...e)}},C=e=>{const t=O(),s=S.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},T=e=>{const t=O();e.waitUntil(t.activate())};e.CacheFirst=class{constructor(e={}){this.o=w.getRuntimeName(e.cacheName),this.g=e.plugins||[],this.m=e.fetchOptions,this.R=e.matchOptions}async handle({event:e,request:t}){let n,r=await R.match({cacheName:this.o,request:t,event:e,matchOptions:this.R,plugins:this.g});if(!r)try{r=await this.q(t,e)}catch(e){n=e}if(!r)throw new s("no-response",{url:t.url,error:n});return r}async q(e,t){const s=await q.fetch({request:e,event:t,fetchOptions:this.m,plugins:this.g}),n=s.clone(),r=R.put({cacheName:this.o,request:e,response:n,event:t,plugins:this.g});if(t)try{t.waitUntil(r)}catch(e){}return s}},e.NavigationRoute=class extends i{constructor(e,{whitelist:t=[/./],blacklist:s=[]}={}){super(e=>this.v(e),e),this.U=t,this.L=s}v({url:e,request:t}){if(t&&"navigate"!==t.mode)return!1;const s=e.pathname+e.search;for(const e of this.L)if(e.test(s))return!1;return!!this.U.some(e=>e.test(s))}},e.cleanupOutdatedCaches=()=>{self.addEventListener("activate",e=>{const t=w.getPrecacheName();e.waitUntil((async(e,t="-precache-")=>{const s=(await self.caches.keys()).filter(s=>s.includes(t)&&s.includes(self.registration.scope)&&s!==e);return await Promise.all(s.map(e=>self.caches.delete(e))),s})(t).then(e=>{}))})},e.clientsClaim=()=>{self.addEventListener("activate",()=>self.clients.claim())},e.createHandlerBoundToURL=e=>{return O().createHandlerBoundToURL(e)},e.precacheAndRoute=(e,t)=>{(e=>{O().addToCacheList(e),e.length>0&&(self.addEventListener("install",C),self.addEventListener("activate",T))})(e),K(t)},e.registerRoute=(e,t,n)=>{let r;if("string"==typeof e){const s=new URL(e,location.href);r=new i(({url:e})=>e.href===s.href,t,n)}else if(e instanceof RegExp)r=new o(e,t,n);else if("function"==typeof e)r=new i(e,t,n);else{if(!(e instanceof i))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}return h().registerRoute(r),r},e.setCacheNameDetails=e=>{w.updateDetails(e)},e.skipWaiting=()=>{self.addEventListener("install",()=>self.skipWaiting())}}));
//# sourceMappingURL=workbox-67ade57f.js.map
